{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\helbe\\\\moveit-nextjs\\\\src\\\\components\\\\CountDown.tsx\";\nimport styles from '../styles/components/CountDowm.module.css';\nexport function CountDowm() {\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdowmContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: [\"Ciclo encerrado\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"icons/check.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountDown,\n        children: [\"Abandonar um ciclo  \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/stop.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountDown,\n        children: [\"Iniciar um ciclo\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/play.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/helbe/moveit-nextjs/src/components/CountDown.tsx"],"names":["styles","CountDowm","minuteLeft","minuteRight","String","minutes","padStart","split","secondsLeft","secondsRight","seconds","countdowmContainer","hasFinished","countdownButton","isactive","countdownButtonActive","resetCountDown","startCountDown"],"mappings":";;;AAGA,OAAOA,MAAP,MAAmB,2CAAnB;AAGA,OAAO,SAASC,SAAT,GAAqB;AAIxB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAApC;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACW,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOT;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKG,WAAW,gBACR;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,SAAS,EAAEZ,MAAM,CAACa,eAFtB;AAAA,iDAMI;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAUJ;AAAA,gBAEKC,QAAQ,gBACL;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAG,GAAEd,MAAM,CAACa,eAAgB,IAAGb,MAAM,CAACe,qBAAsB,EAFzE;AAGI,QAAA,OAAO,EAAEC,cAHb;AAAA,wDAKwB;AAAK,UAAA,GAAG,EAAC,gBAAT;AAA0B,UAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBASD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAEhB,MAAM,CAACa,eAFtB;AAGI,QAAA,OAAO,EAAEI,cAHb;AAAA,oDAMI;AAAK,UAAA,GAAG,EAAC,gBAAT;AAA0B,UAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXZ,qBAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH","sourcesContent":["import { isAssetError } from 'next/dist/client/route-loader'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { ChallengesContext } from '../contexts/ChallengesContext'\r\nimport styles from '../styles/components/CountDowm.module.css'\r\n\r\n\r\nexport function CountDowm() {\r\n\r\n  \r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdowmContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsLeft}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button\r\n                    disabled\r\n                    className={styles.countdownButton}\r\n\r\n                >\r\n                    Ciclo encerrado\r\n                    <img src=\"icons/check.svg\" alt=\"\" />\r\n                </button >\r\n            ) : (\r\n                    <>\r\n\r\n                        {isactive ? (\r\n                            <button\r\n                                type=\"button\"\r\n                                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                                onClick={resetCountDown}\r\n                            >\r\n                                Abandonar um ciclo  <img src=\"icons/stop.svg\" alt=\"\" />\r\n                            </button >) : (\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={styles.countdownButton}\r\n                                    onClick={startCountDown}\r\n                                >\r\n                                    Iniciar um ciclo\r\n                                    <img src=\"icons/play.svg\" alt=\"\" />\r\n                                </button>\r\n                            )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}