{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fernandamarques/moveit-nextjs/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useEffect, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {}, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo Desafio ðŸŽ‰ðŸ¥³', {\n        body: `Valendo ${challenge.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExpirence = currentExperience + amount;\n\n    if (finalExpirence >= experienceToNextLevel) {\n      finalExpirence = finalExpirence - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExpirence);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/fernandamarques/moveit-nextjs/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExpirence"],"mappings":";;AAAA,SAAUA,aAAV,EAAoCC,SAApC,EAA+CC,QAA/C,QAAgE,OAAhE;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAyBA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAAiE;AAEpE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AAGA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAMa,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAKAlB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACM,KAAD,EAAQE,iBAAR,EAA2BE,mBAA3B,CAFM,CAAT;;AAIA,WAASS,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAGV,YAAY,CAACW,UAAb,KAA4B,SAA/B,EAA0C;AACtC,UAAIX,YAAJ,CAAiB,mBAAjB,EAAsC;AAClCY,QAAAA,IAAI,EAAG,WAAUJ,SAAS,CAACK,MAAO;AADA,OAAtC;AAGH;AACJ;;AAED,WAASC,cAAT,GAA0B;AACtBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASmB,iBAAT,GAA6B;AACzB,QAAG,CAACpB,eAAJ,EAAqB;AACjB;AACH;;AAED,UAAM;AAACkB,MAAAA;AAAD,QAAWlB,eAAjB;AAEA,QAAIqB,cAAc,GAAGzB,iBAAiB,GAAGsB,MAAzC;;AAEA,QAAGG,cAAc,IAAInB,qBAArB,EAA4C;AACxCmB,MAAAA,cAAc,GAAGA,cAAc,GAAGnB,qBAAlC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACwB,cAAD,CAApB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACH;;AAID,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHJ,MAAAA,KADG;AAEHE,MAAAA,iBAFG;AAGHE,MAAAA,mBAHG;AAIHS,MAAAA,OAJG;AAKHC,MAAAA,iBALG;AAMHR,MAAAA,eANG;AAOHmB,MAAAA,cAPG;AAQHjB,MAAAA,qBARG;AASHkB,MAAAA;AATG,KADP;AAAA,cAaK3B;AAbL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH","sourcesContent":["import {  createContext, ReactNode, useEffect, useState  } from 'react'\nimport challenges from '../../challenges.json'\n\n\ninterface Challenge {\n    type: 'body' | 'eye'\n    description: string\n    amount: number\n}\n\ninterface ChallengesContextData {\n    level: number\n    currentExperience: number\n    challengesCompleted: number\n    experienceToNextLevel: number\n    levelUp: () => void\n    startNewChallenge: () => void\n    activeChallenge: Challenge\n    resetChallenge: () => void\n    completeChallenge: () => void\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData)\n\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\n\n    const [level, setLevel] = useState(1)\n    const [currentExperience, setCurrentExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission()\n    }, [])\n\n\n    useEffect(() => {\n\n    }, [level, currentExperience, challengesCompleted])\n\n    function levelUp() {\n      setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex]\n\n        setActiveChallenge(challenge)\n\n        new Audio('/notification.mp3').play()\n\n        if(Notification.permission === 'granted') {\n            new Notification('Novo Desafio ðŸŽ‰ðŸ¥³', {\n                body: `Valendo ${challenge.amount}xp!`\n            })\n        }\n    }\n\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n  \n    function completeChallenge() {\n        if(!activeChallenge) {\n            return;\n        }\n\n        const {amount} = activeChallenge\n\n        let finalExpirence = currentExperience + amount\n\n        if(finalExpirence >= experienceToNextLevel) {\n            finalExpirence = finalExpirence - experienceToNextLevel\n            levelUp()\n        }\n\n        setCurrentExperience(finalExpirence)\n        setActiveChallenge(null)\n        setChallengesCompleted(challengesCompleted + 1)\n    }\n\n    \n\n    return(\n        <ChallengesContext.Provider \n        value={{\n            level, \n            currentExperience, \n            challengesCompleted,\n            levelUp, \n            startNewChallenge,\n            activeChallenge,\n            resetChallenge,\n            experienceToNextLevel,\n            completeChallenge\n        }}\n        >\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}