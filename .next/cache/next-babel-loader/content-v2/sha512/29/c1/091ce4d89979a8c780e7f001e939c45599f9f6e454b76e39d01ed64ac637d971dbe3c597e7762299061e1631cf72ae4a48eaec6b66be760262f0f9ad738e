{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/helbe/moveit-nextjs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\helbe\\\\moveit-nextjs\\\\src\\\\components\\\\CountDown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/CountDowm.module.css';\nexport function CountDowm() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isactive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startCountDown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isactive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isactive, time]);\n\n  function resetCountDown() {\n    setIsActive(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdowmContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: resetCountDown,\n      children: \"Abandonar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountDown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountDowm, \"6OTaWXIWsbMZ26AsuEjUj1AnfIk=\");\n\n_c = CountDowm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDowm\");","map":{"version":3,"sources":["C:/Users/helbe/moveit-nextjs/src/components/CountDown.tsx"],"names":["useState","useEffect","styles","CountDowm","time","setTime","isactive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startCountDown","setTimeout","resetCountDown","countdowmContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,KAAK,EAAN,CADR;AAAA,MACjBI,IADiB;AAAA,MACXC,OADW;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEjBM,QAFiB;AAAA,MAEPC,WAFO;;AAIxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AALwB,8BAOUQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPV;AAAA;AAAA,MAOjBC,UAPiB;AAAA,MAOLC,WAPK;;AAAA,+BAQYJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARZ;AAAA;AAAA,MAQjBG,WARiB;AAAA,MAQJC,YARI;;AAWxB,WAASC,cAAT,GAA0B;AACtBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBgB,MAAAA,UAAU,CAAC,YAAM;AACbf,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAOL,CAACE,QAAD,EAAWF,IAAX,CAPK,CAAT;;AAUA,WAASiB,cAAT,GAA0B;AACtBd,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACoB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKZ,QAAQ,gBACL;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,YAAKJ,MAAM,CAACqB,eAAZ,cAA+BrB,MAAM,CAACsB,qBAAtC,CAFb;AAGI,MAAA,OAAO,EAAEH,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBASD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAEnB,MAAM,CAACqB,eAFtB;AAGI,MAAA,OAAO,EAAEJ,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GAjEehB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport styles from '../styles/components/CountDowm.module.css'\r\n\r\nexport function CountDowm() {\r\n    const [time, setTime] = useState(25 * 60)\r\n    const [isactive, setIsActive] = useState(false)\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\r\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\r\n\r\n\r\n    function startCountDown() {\r\n        setIsActive(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isactive && time > 0) {\r\n            setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        }\r\n    },\r\n        [isactive, time])\r\n\r\n    \r\n    function resetCountDown() {\r\n        setIsActive(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdowmContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondsLeft}</span>\r\n                    <span>{secondsRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {isactive ? (\r\n                <button\r\n                    type=\"button\"\r\n                    className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                    onClick={resetCountDown}\r\n                >\r\n                    Abandonar um ciclo\r\n                </button >) : (\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.countdownButton}\r\n                        onClick={startCountDown}\r\n                    >\r\n                        Iniciar um ciclo\r\n                    </button>\r\n\r\n                )}\r\n\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}