{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fernandamarques/moveit-nextjs/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currenExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    console.log('New Challenge');\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currenExperience: currenExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"dqEo4ZvozM4/Eb1Yz6xTHpt1NOI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/Users/fernandamarques/moveit-nextjs/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currenExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","console","log"],"mappings":";;;;;AAAA,SAAUA,aAAV,EAAoCC,QAApC,QAAqD,OAArD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAE1CH,QAAQ,CAAC,CAAD,CAFkC;AAAA,MAE7DI,KAF6D;AAAA,MAEtDC,QAFsD;;AAAA,mBAGnBL,QAAQ,CAAC,CAAD,CAHW;AAAA,MAG7DM,gBAH6D;AAAA,MAG3CC,oBAH2C;;AAAA,mBAIdP,QAAQ,CAAC,CAAD,CAJM;AAAA,MAI7DQ,mBAJ6D;AAAA,MAIxCC,sBAJwC;;AAMpE,WAASC,OAAT,GAAmB;AACjBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASO,iBAAT,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACT,MAAAA,KAAK,EAALA,KAAD;AAAQE,MAAAA,gBAAgB,EAAhBA,gBAAR;AAA0BE,MAAAA,mBAAmB,EAAnBA,mBAA1B;AAA8CE,MAAAA,OAAO,EAAPA;AAA9C,KAAnC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBeD,kB;;KAAAA,kB","sourcesContent":["import {  createContext, ReactNode, useState  } from 'react'\n\nexport const ChallengesContext = createContext({})\n\ninterface ChallengesProviderProps {\n    children: ReactNode\n}\n\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\n\n    const [level, setLevel] = useState(1)\n    const [currenExperience, setCurrentExperience] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n    function levelUp() {\n      setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        console.log('New Challenge')\n    }\n  \n    return(\n        <ChallengesContext.Provider value={{level, currenExperience, challengesCompleted,levelUp}}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}